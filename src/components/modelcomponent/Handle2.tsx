/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/handle2.glb --output src/components/modelcomponent/Handle1 --types --keepnames --meta 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
type GLTFAction = any;
type GLTFResult = GLTF & {
  nodes: {
    Mesh1: THREE.Mesh
  }
  materials: {
    FrontColor: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Handle2(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/handle2.glb') as GLTFResult
  const whiteMaterial = new THREE.MeshStandardMaterial({ color: 0xFFFFFF });
  return (
    <group {...props} dispose={null}>
      <mesh name="Mesh1" geometry={nodes.Mesh1.geometry} material={whiteMaterial} position={[16.216, 24.337, 19.376]} scale={0.569} userData={{ name: 'Mesh1' }} />
    </group>
  )
}

useGLTF.preload('/handle2.glb')
export default Handle2;