/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public\50cmWideFrame1.glb --types --output src/components/modelcomponent/50cmWideframe1.tsx 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
type GLTFAction = any;
type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
  }
  materials: {
    ['Material.013']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Smallframe(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/50cmWideFrame1.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={materials['Material.013']} position={[0, 0.493, 0]} rotation={[Math.PI / 2, 0, 0]} scale={[0.179, 0.247, 0.185]} />
    </group>
  )
}

useGLTF.preload('/50cmWideFrame1.glb')
export default Smallframe;
