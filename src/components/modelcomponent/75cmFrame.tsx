/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public\75cmWideFrame.glb --types --output src/components/modelcomponent/75cmFrame.tsx 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
type GLTFAction = any;
type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
  }
  materials: {
    ['Material.008']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Mediumframe(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/75cmWideFrame.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials['Material.008']}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.284, 0.171, 0.185]}
      />
    </group>
  )
}

useGLTF.preload('/75cmWideFrame.glb')
export default Mediumframe;
